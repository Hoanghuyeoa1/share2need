// Generated by view binder compiler. Do not edit!
package com.example.share2need.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.share2need.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ReceivedItemsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final LinearLayout product1;

  @NonNull
  public final ImageView product1Image;

  @NonNull
  public final TextView product1Name;

  @NonNull
  public final LinearLayout product2;

  @NonNull
  public final ImageView product2Image;

  @NonNull
  public final TextView product2Name;

  private ReceivedItemsBinding(@NonNull LinearLayout rootView, @NonNull ImageButton backButton,
      @NonNull LinearLayout product1, @NonNull ImageView product1Image,
      @NonNull TextView product1Name, @NonNull LinearLayout product2,
      @NonNull ImageView product2Image, @NonNull TextView product2Name) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.product1 = product1;
    this.product1Image = product1Image;
    this.product1Name = product1Name;
    this.product2 = product2;
    this.product2Image = product2Image;
    this.product2Name = product2Name;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ReceivedItemsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ReceivedItemsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.received_items, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ReceivedItemsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_button;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.product_1;
      LinearLayout product1 = ViewBindings.findChildViewById(rootView, id);
      if (product1 == null) {
        break missingId;
      }

      id = R.id.product_1_image;
      ImageView product1Image = ViewBindings.findChildViewById(rootView, id);
      if (product1Image == null) {
        break missingId;
      }

      id = R.id.product_1_name;
      TextView product1Name = ViewBindings.findChildViewById(rootView, id);
      if (product1Name == null) {
        break missingId;
      }

      id = R.id.product_2;
      LinearLayout product2 = ViewBindings.findChildViewById(rootView, id);
      if (product2 == null) {
        break missingId;
      }

      id = R.id.product_2_image;
      ImageView product2Image = ViewBindings.findChildViewById(rootView, id);
      if (product2Image == null) {
        break missingId;
      }

      id = R.id.product_2_name;
      TextView product2Name = ViewBindings.findChildViewById(rootView, id);
      if (product2Name == null) {
        break missingId;
      }

      return new ReceivedItemsBinding((LinearLayout) rootView, backButton, product1, product1Image,
          product1Name, product2, product2Image, product2Name);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
